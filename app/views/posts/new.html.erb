<h1>画像投稿フォーム</h1>

<div class="row">
  <div class="col s12 m10 push-m1">
    <div class="card">
      <div class="card-content post-card">
        <%= form_with(model:@post,local: true,class:"margin-30") do |f|%>
          <h4>画像</h4>
  <%= f.file_field :image, accept: "image/*" %>
  <h4>説明</h4>
  <%= f.text_area :sentence %>
  <%= f.submit '投稿' %>
  <div class="form-group">
    <label>Category</label>
    <%= f.text_field :category,class: 'form-control post_category' %>
  </div>

  <div class="form-group row">
    <%= f.label :star,'評価 ', class:'col-md-3 col-form-label' %>
    <%#= f.hidden_field :star, id: :review_star %>
    <div id="create_star"></div>
　</div>
  <script>
　$('#create_star').empty();
　let starElem = document.querySelector("#create_star");
　let option = {
    starOn: "<%= asset_path('star-on.png') %>",
    starOff: "<%= asset_path('star-off.png') %>",
    starHalf: "<%= asset_path('star-half.png') %>",
    scoreName: "post[star]",
    half: true,
  };
  raty(starElem, option);
  </script>
          <div id="post_form" class="field">
            <div class="input-field">
              <input type="text" id="address" placeholder="地名、施設名などを入力するか、地図をクリックしてマーカーを立ててください">
              <a class="btn" onclick="codeAddress()">地図検索</a>
              <a id="del" class="btn marker-delete right" onclick="deleteMarker()">
              <i class="fas fa-map-marker-alt fas-2x" style="color:red"></i>削除
              </a>
            </div>

            <div id='map' class="margin-t-b-14"></div>
            <%= f.fields_for :map, @post.build_map do |map| %>
            <%= map.hidden_field :latitude, id:"post_map_latitude" %>
            <%= map.hidden_field :longitude, id:"post_map_longitude" %>
            <% end %>
            <style>
            #map {
            height: 600px;
            width: 600px;
            }
            </style>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_MAPS_API_KEY"] %>&callback=initMap&callback=initMap" async defer></script>
<script>
var marker
var myLatLng
var map_lat
var map_lng
var geocoder
var map_result
let map

function initMap (){
  myLatLng = {lat: 35.68090045006303, lng: 139.76690798417752}
  map_lat = document.getElementById('post_map_latitude')
  map_lng = document.getElementById('post_map_longitude')
  marker = new google.maps.Marker();

  map = new google.maps.Map(document.getElementById('map'), {
  center: myLatLng,
  zoom: 12
  });

google.maps.event.addListener(map, 'click', mylistener);

     //クリックしたときの処理
function mylistener(event){
    marker.setPosition(new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()));
    marker.setMap(map);
    console.log(event.latLng.lat(), event.latLng.lng());
    map_lat.value = event.latLng.lat();
    map_lng.value = event.latLng.lng();
  }
}

  function deleteMarker(){
    marker.setMap(null);
    map_lat.value = "";
    map_lng.value = "";
}

//追加した関数

function codeAddress(){
  geocoder = new google.maps.Geocoder()
  let inputAddress = document.getElementById('address').value;
  geocoder.geocode( {
    'address': inputAddress,
     'region': 'jp'
    }, function(results, status) {
    if (status == 'OK') {
      map.setCenter(results[0].geometry.location);
      map_result = results[0].geometry.location;
      map_lat.value = map_result.lat();
      map_lng.value = map_result.lng();
      marker.setPosition(new google.maps.LatLng(map_result.lat(), map_result.lng()));
      marker.setMap(map);
      console.log(map_lat.value,map_lng.value);
    } else {
      alert('該当する結果がありませんでした');
      initMap();
    }
  });
}
</script>
